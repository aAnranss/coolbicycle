apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //阿里路由框架配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    //debug模式下，可独立运行，否则作为宿主程序的一个模块，合并到宿主程序
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {
                //独立运行
                manifest.srcFile 'src/main/alone/AndroidManifest.xml'
            } else {
                //合并到宿主
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    //正式版本时，排除alone文件夹下所有调试文件
                    exclude 'src/main/alone/*'
                }
            }
        }
    }
    //统一资源前缀，规范资源引用
    //resourcePrefix "app_"
    dataBinding{
        enabled true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    if (isBuildModule.toBoolean()){
        implementation project(':library-base')
    } else {
        //添加主业务模块
        implementation project(':module-main')
        //添加社区模块
        implementation project(':module-community')
        //添加登陆注册模块
        implementation project(':module-sign')
        //添加用户模块
        implementation project(':module-user')
        //添加用户注册模块
        implementation project(':module-register')
        //添加隐私政策模块
        implementation project(':module-ppolicy')
        //添加用户服务协议模块
        implementation project(':module-spolicy')
    }
}


